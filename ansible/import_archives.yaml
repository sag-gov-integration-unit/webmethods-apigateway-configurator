---

################################################################
## Load the needed vars
################################################################

- name: Load vars
  hosts: local
  tasks:
    - name: Include all vars files
      include_vars:
        file: "{{ item }}"
      with_fileglob:
        - vars/common.yaml
        - vars/rest_connect.yaml
        - vars/data_archives.yaml

################################################################
## set configs via REST APIs
################################################################

- hosts: local
  vars:
    apigateway_rest_protocol: "{{ vars_rest_protocol }}"
    apigateway_rest_host: "{{ vars_rest_host }}"
    apigateway_rest_port: "{{ vars_rest_port }}"
    apigateway_rest_no_check_certs: "{{ vars_rest_no_check_certs }}"
    apigateway_rest_login_username: "{{ vars_rest_login_username }}"
    apigateway_rest_login_password: "{{ vars_rest_login_password }}"

  tasks:

    - ansible.builtin.debug:
        var: "{{ item }}"
      loop:
        - _index_items_regex_pattern
        - _index_items
    
    - name: set initial list so it's not undefined
      set_fact:
         _archives_list: []

    - name: append each item template to list
      set_fact:
        _archives_list: "{{ _archives_list + [ _archives_template ] }}"
      loop: "{{ _index_items }}"
      loop_control:
        loop_var: index_item

    - ansible.builtin.debug:
        var: _archives_list

    - name: set the final list just in case autozip is enabled
      set_fact:
        _archives_list_final: "{{ _archives_list }}"
 
    - name: autozip the path in the archives if autozip_enabled
      block:

        - name: auto-zip requested...reset internal archive list
          set_fact:
            _archives_list_final: []
 
        - name: Zip archives first
          community.general.archive:
            path: "{{ _import_single_tozip.path }}/*"
            dest: "/tmp/{{ _import_single_tozip.path | basename }}.zip"
            format: zip
          with_items: "{{ _archives_list }}"
          loop_control:
            loop_var: _import_single_tozip

        - name: update dict with new zip paths
          set_fact:
            _archives_list_final: "{{ _archives_list_final | default([]) + [ { 'path': ('/tmp/' + _import_single.path | basename + '.zip'), 'overwrite': _import_single.overwrite, 'fixingMissingVersions': _import_single.fixingMissingVersions, 'preserveAssetState': _import_single.preserveAssetState } ] }}"
          loop: "{{ _archives_list }}"
          loop_control:
            loop_var: _import_single
      
      when: vars_archive_imports_autozip_enabled | default() | bool and _archives_list | length > 0
    
    - debug: var=_archives_list_final

    - include_role:
        name: apigateway-rest-configurator
      vars:
        configs_action: import-archives
        configs_enabled: "{{ vars_archive_imports_enabled }}"
        rvar_apigateway_archive_imports: "{{ _archives_list_final }}"
